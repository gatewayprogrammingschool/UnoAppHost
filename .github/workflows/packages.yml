name: Packages

on:
  release:
    types: [released]
  push:
    branches: [ master, main, release/* ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  publish-to-github:
    runs-on: windows-2022
    if: ${{ github.event_name != 'release' }}
    env:
      ARTIFACT_FOLDER: "${{ github.workspace }}/nuget"
    steps:
    - name: Event
      env:       
        event_name: ${{ github.event_name }}
      run: echo "event_name $env:event_name"
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@master
      with:
        vs-prerelease: true
        vs-version: 17
        
    - name: Setup Scoop
      run: |
        iwr -useb get.scoop.sh | iex
        scoop install gitversion
        GitVersion
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Debug
      run: msbuild /t:build /p:Configuration=Debug /p:PackageOutputPath="${{ env.ARTIFACT_FOLDER }}" /p:IncludeSource=true src/CommunityToolkit.Extensions.Hosting.WindowsAppSdk/CommunityToolkit.Extensions.Hosting.WindowsAppSdk.csproj
      
    - name: GitHub Packages
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: '${{ env.ARTIFACT_FOLDER }}/*.nupkg'
        # package repository owner
        repo-owner: sharpninja
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true

  publish-to-nuget:
    runs-on: windows-2022
    if: ${{ github.event_name == 'release' }}
    env:
      ARTIFACT_FOLDER: "${{ github.workspace }}/nuget"
    steps:
    - name: Event
      env:       
        event_name: ${{ github.event_name }}
      run: echo "event_name $env:event_name"
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@master
      with:
        vs-prerelease: true
        vs-version: 17
        
    - name: Setup Scoop
      run: |
        iwr -useb get.scoop.sh | iex
        scoop install gitversion
        GitVersion
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: msbuild /t:build /p:Configuration=Release /p:PackageOutputPath="${{ env.ARTIFACT_FOLDER }}" /p:IncludeSource=true src/CommunityToolkit.Extensions.Hosting.WindowsAppSdk/CommunityToolkit.Extensions.Hosting.WindowsAppSdk.csproj

    - name: Attach nuget packages to Github releases
      uses: softprops/action-gh-release@v1
      with:
        files: "${{ env.ARTIFACT_FOLDER }}/*.nupkg"

    - name: Nuget Publish
      run: dotnet nuget push "${{ env.ARTIFACT_FOLDER }}/*.nupkg" -k "${{ secrets.NUGET_KEY }}" -s https://api.nuget.org/v3/index.json --skip-duplicate
        
